(*************************************************************
 *                                                           *
 *  Cryptographic protocol verifier                          *
 *                                                           *
 *  Bruno Blanchet, Vincent Cheval, and Marc Sylvestre       *
 *                                                           *
 *  Copyright (C) INRIA, CNRS 2000-2016                      *
 *                                                           *
 *************************************************************)

(*

    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details (in file LICENSE).

    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

*)
type skey.
type pkey.
type seed.
type block.
type encblock.

(* Probabilistic public-key encryption *)

fun pk(skey): pkey.
fun enc(block, pkey, seed): encblock.
fun dec(encblock, skey): block.
equation forall x: block, y: skey, z: seed;  dec(enc(x, pk(y), z), y) = x.


free c,c2: channel.

process
	new s: skey;
	(
	  out(c, pk(s))
	|
	  !
	  in(c2, x: block);
	  new a: seed;
	  new r: encblock;
	  out(c, choice[enc(x, pk(s), a), r])
	)
